// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: fibo.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Fibo.Definition {
  /// <summary>
  /// Service for returning static data
  /// </summary>
  public static partial class Fibo
  {
    static readonly string __ServiceName = "Fibo";

    static readonly grpc::Marshaller<global::Fibo.Definition.FiboNumberByIndexRequest> __Marshaller_FiboNumberByIndexRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.FiboNumberByIndexRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.FiboNumberByIndexReply> __Marshaller_FiboNumberByIndexReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.FiboNumberByIndexReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.EmptyRequest> __Marshaller_EmptyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.EmptyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.VisitedValuesReply> __Marshaller_VisitedValuesReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.VisitedValuesReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.VisitedValue> __Marshaller_VisitedValue = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.VisitedValue.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.SaveFiboNumberReply> __Marshaller_SaveFiboNumberReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.SaveFiboNumberReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Fibo.Definition.SaveFiboIndexPostgresRequest> __Marshaller_SaveFiboIndexPostgresRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Fibo.Definition.SaveFiboIndexPostgresRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Fibo.Definition.FiboNumberByIndexRequest, global::Fibo.Definition.FiboNumberByIndexReply> __Method_GetFiboNumberByIndex = new grpc::Method<global::Fibo.Definition.FiboNumberByIndexRequest, global::Fibo.Definition.FiboNumberByIndexReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFiboNumberByIndex",
        __Marshaller_FiboNumberByIndexRequest,
        __Marshaller_FiboNumberByIndexReply);

    static readonly grpc::Method<global::Fibo.Definition.EmptyRequest, global::Fibo.Definition.VisitedValuesReply> __Method_GetVisitedValues = new grpc::Method<global::Fibo.Definition.EmptyRequest, global::Fibo.Definition.VisitedValuesReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVisitedValues",
        __Marshaller_EmptyRequest,
        __Marshaller_VisitedValuesReply);

    static readonly grpc::Method<global::Fibo.Definition.VisitedValue, global::Fibo.Definition.SaveFiboNumberReply> __Method_SaveFiboNumberRedis = new grpc::Method<global::Fibo.Definition.VisitedValue, global::Fibo.Definition.SaveFiboNumberReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveFiboNumberRedis",
        __Marshaller_VisitedValue,
        __Marshaller_SaveFiboNumberReply);

    static readonly grpc::Method<global::Fibo.Definition.SaveFiboIndexPostgresRequest, global::Fibo.Definition.SaveFiboNumberReply> __Method_SaveFiboIndexPostgres = new grpc::Method<global::Fibo.Definition.SaveFiboIndexPostgresRequest, global::Fibo.Definition.SaveFiboNumberReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveFiboIndexPostgres",
        __Marshaller_SaveFiboIndexPostgresRequest,
        __Marshaller_SaveFiboNumberReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Fibo.Definition.FiboReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Fibo</summary>
    [grpc::BindServiceMethod(typeof(Fibo), "BindService")]
    public abstract partial class FiboBase
    {
      /// <summary>
      /// Returns the fibonacci numeral by a given index
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Fibo.Definition.FiboNumberByIndexReply> GetFiboNumberByIndex(global::Fibo.Definition.FiboNumberByIndexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Fibo.Definition.VisitedValuesReply> GetVisitedValues(global::Fibo.Definition.EmptyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboNumberRedis(global::Fibo.Definition.VisitedValue request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboIndexPostgres(global::Fibo.Definition.SaveFiboIndexPostgresRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Fibo</summary>
    public partial class FiboClient : grpc::ClientBase<FiboClient>
    {
      /// <summary>Creates a new client for Fibo</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public FiboClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Fibo that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public FiboClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected FiboClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected FiboClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the fibonacci numeral by a given index
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Fibo.Definition.FiboNumberByIndexReply GetFiboNumberByIndex(global::Fibo.Definition.FiboNumberByIndexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFiboNumberByIndex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the fibonacci numeral by a given index
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Fibo.Definition.FiboNumberByIndexReply GetFiboNumberByIndex(global::Fibo.Definition.FiboNumberByIndexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFiboNumberByIndex, null, options, request);
      }
      /// <summary>
      /// Returns the fibonacci numeral by a given index
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.FiboNumberByIndexReply> GetFiboNumberByIndexAsync(global::Fibo.Definition.FiboNumberByIndexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFiboNumberByIndexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the fibonacci numeral by a given index
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.FiboNumberByIndexReply> GetFiboNumberByIndexAsync(global::Fibo.Definition.FiboNumberByIndexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFiboNumberByIndex, null, options, request);
      }
      public virtual global::Fibo.Definition.VisitedValuesReply GetVisitedValues(global::Fibo.Definition.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVisitedValues(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Fibo.Definition.VisitedValuesReply GetVisitedValues(global::Fibo.Definition.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVisitedValues, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.VisitedValuesReply> GetVisitedValuesAsync(global::Fibo.Definition.EmptyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVisitedValuesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.VisitedValuesReply> GetVisitedValuesAsync(global::Fibo.Definition.EmptyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVisitedValues, null, options, request);
      }
      public virtual global::Fibo.Definition.SaveFiboNumberReply SaveFiboNumberRedis(global::Fibo.Definition.VisitedValue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFiboNumberRedis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Fibo.Definition.SaveFiboNumberReply SaveFiboNumberRedis(global::Fibo.Definition.VisitedValue request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveFiboNumberRedis, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboNumberRedisAsync(global::Fibo.Definition.VisitedValue request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFiboNumberRedisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboNumberRedisAsync(global::Fibo.Definition.VisitedValue request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveFiboNumberRedis, null, options, request);
      }
      public virtual global::Fibo.Definition.SaveFiboNumberReply SaveFiboIndexPostgres(global::Fibo.Definition.SaveFiboIndexPostgresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFiboIndexPostgres(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Fibo.Definition.SaveFiboNumberReply SaveFiboIndexPostgres(global::Fibo.Definition.SaveFiboIndexPostgresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveFiboIndexPostgres, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboIndexPostgresAsync(global::Fibo.Definition.SaveFiboIndexPostgresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveFiboIndexPostgresAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Fibo.Definition.SaveFiboNumberReply> SaveFiboIndexPostgresAsync(global::Fibo.Definition.SaveFiboIndexPostgresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveFiboIndexPostgres, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override FiboClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FiboClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(FiboBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetFiboNumberByIndex, serviceImpl.GetFiboNumberByIndex)
          .AddMethod(__Method_GetVisitedValues, serviceImpl.GetVisitedValues)
          .AddMethod(__Method_SaveFiboNumberRedis, serviceImpl.SaveFiboNumberRedis)
          .AddMethod(__Method_SaveFiboIndexPostgres, serviceImpl.SaveFiboIndexPostgres).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FiboBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetFiboNumberByIndex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Fibo.Definition.FiboNumberByIndexRequest, global::Fibo.Definition.FiboNumberByIndexReply>(serviceImpl.GetFiboNumberByIndex));
      serviceBinder.AddMethod(__Method_GetVisitedValues, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Fibo.Definition.EmptyRequest, global::Fibo.Definition.VisitedValuesReply>(serviceImpl.GetVisitedValues));
      serviceBinder.AddMethod(__Method_SaveFiboNumberRedis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Fibo.Definition.VisitedValue, global::Fibo.Definition.SaveFiboNumberReply>(serviceImpl.SaveFiboNumberRedis));
      serviceBinder.AddMethod(__Method_SaveFiboIndexPostgres, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Fibo.Definition.SaveFiboIndexPostgresRequest, global::Fibo.Definition.SaveFiboNumberReply>(serviceImpl.SaveFiboIndexPostgres));
    }

  }
}
#endregion
